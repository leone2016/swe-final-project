plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'edu.miu.blog.app'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly("com.mysql:mysql-connector-j:8.0.33")
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'



	//unit testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.mockito:mockito-junit-jupiter'

	// Logging
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation("net.logstash.logback:logstash-logback-encoder:8.1")

	// Messaging kafka
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	implementation("org.springframework.boot:spring-boot-starter-mail:3.5.6")

    // Jackson Databind
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Spring Boot JSON Starter
    implementation 'org.springframework.boot:spring-boot-starter-json'

}

//tasks.named('test') {
//	useJUnitPlatform()
//}

bootRun {
	jvmArgs = ["-Dfile.encoding=UTF-8"]
}
tasks.withType(JavaCompile) {
	options.compilerArgs << "-Xlint:unchecked"
}